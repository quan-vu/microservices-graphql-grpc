# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import products_pb2 as products__pb2


class productsStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.get_product = channel.unary_unary(
                '/products.products/get_product',
                request_serializer=products__pb2.GetProduct.SerializeToString,
                response_deserializer=products__pb2.Product.FromString,
                )
        self.create_product = channel.unary_unary(
                '/products.products/create_product',
                request_serializer=products__pb2.Product.SerializeToString,
                response_deserializer=products__pb2.Product.FromString,
                )
        self.list_products = channel.unary_unary(
                '/products.products/list_products',
                request_serializer=products__pb2.GetProducts.SerializeToString,
                response_deserializer=products__pb2.Products.FromString,
                )


class productsServicer(object):
    """Missing associated documentation comment in .proto file"""

    def get_product(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def create_product(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list_products(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_productsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'get_product': grpc.unary_unary_rpc_method_handler(
                    servicer.get_product,
                    request_deserializer=products__pb2.GetProduct.FromString,
                    response_serializer=products__pb2.Product.SerializeToString,
            ),
            'create_product': grpc.unary_unary_rpc_method_handler(
                    servicer.create_product,
                    request_deserializer=products__pb2.Product.FromString,
                    response_serializer=products__pb2.Product.SerializeToString,
            ),
            'list_products': grpc.unary_unary_rpc_method_handler(
                    servicer.list_products,
                    request_deserializer=products__pb2.GetProducts.FromString,
                    response_serializer=products__pb2.Products.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'products.products', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class products(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def get_product(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/products.products/get_product',
            products__pb2.GetProduct.SerializeToString,
            products__pb2.Product.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def create_product(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/products.products/create_product',
            products__pb2.Product.SerializeToString,
            products__pb2.Product.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def list_products(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/products.products/list_products',
            products__pb2.GetProducts.SerializeToString,
            products__pb2.Products.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
